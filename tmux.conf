#start new if no existing session


# remap prefix to Control + a
set -g prefix C-a
set-option -g prefix2 C-b
bind a send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

unbind %
bind _ split-window -v
bind | split-window -h

bind-key C-a last-window

# confirm before killing a window or the server
bind-key K confirm kill-server
bind q killp

#set-option -g default-terminal "screen-256color"
#set -g default-terminal "screen-256color"
#set -g default-terminal "screen-256color"
#set -g mode-mouse on
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'


#starting from 0
set -g base-index 1

#open man in new window
bind / command-prompt "split-window 'exec man %%'"

set-option -g mouse-select-pane off
set-option -g mouse-resize-pane off
set-option -g mouse-select-window off
set-window-option -g mode-mouse off
#setw -g mode-mouse on
#set-option -g bell-action any
#set-option -g visual-bell on


set -g history-limit 4096

#closer to vim the copy paste
setw -g mode-keys vi
#unbind [
#bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind -t vi-copy Escape cancel
set -sg escape-time 0
bind Space choose-buffer

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Automatically set window title
setw -g automatic-rename on
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)

#
#set-option -g status-keys vi
# use the vim motion keys to move between panes
 bind h select-pane -L
 bind j select-pane -D
 bind k select-pane -U
 bind l select-pane -R
#
# # use vim motion keys while in copy mode
# # use the vim resize keys.
# # the number at the end is how much the pane will be resized,
# # and 1 is fairly small -- you might want to tweak this.
# bind resize-pane -R 1
 bind - resize-pane -D 1
 bind + resize-pane -U 1
 bind < resize-pane -L 1
 bind > resize-pane -R 1


#### COLOUR
# default statusbar colors
#set-option -g status-bg colour235 #base02
set -g status-bg black
#set-option -g status-fg colour136 #yellow
set -g status-fg white
set-option -g status-attr default


## default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim
#
# active window title colors
set-window-option -g window-status-current-fg white #orange
set-window-option -g window-status-current-bg blue
#set-window-option -g window-status-current-attr bright
#setw -g window-status-current-attr reverse


# pane border
set-option -g pane-border-fg white #base02
set-option -g pane-active-border-fg green #base01
#
# message text
set-option -g message-bg blue #base02
set-option -g message-fg white #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
#set-window-option -g clock-mode-colour colour64 #green

#
# left
set -g status-left-fg green
set -g status-left-bg black
set -g status-left-length 70
#set -g status-left "#H  #[fg=blue](#(curl -4 ipinfo.io/ip)):"
set -g status-left "#H:"


#kset -g status-left "#[fg=green]: #h : #[fg=brightblue]#(curl icanhazip.com) #[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "

# right
set -g status-right-length 60
set -g status-right-fg white
set -g status-right-bg colour8
set -g status-right-bg colour8
#set -g status-right 'ßÜ #(tmux_upspeed)/#(tmux_downspeed) | #(sensors | grep -i fan | awk -F: \'{print \$2}\')|  #(sensors | grep temp1 | cut -d+ -f2 | cut -d. -f1) ℃ | #(acpi -b | cut -d" " -f4 | cut -d"%" -f1)% | %a %d %b | %H:%M '
set-option -g status-interval 60
#set -g status-right '#[fg=brightyellow]#(sensors | grep temp1 | cut -d+ -f2 | cut -d. -f1) #[fg=colour7]| #[fg=brightblue]ï #[fg=brightyellow]#(acpi -b | cut -d" " -f4 | cut -d"%" -f1) #[fg=colour7]| #[fg=brightred]#(cut -d " " -f 1-3 /proc/loadavg) #[fg=colour7]| #[fg=brightgreen]%a %H:%M'
#set -g status-right '#[fg=brightblue]ßÜ #[fg=brightyellow]#(tmux_upspeed)/#(tmux_downspeed) #[fg=colour7]| #[fg=brightblue]ª #[fg=brightyellow]#(sensors | grep temp1 | cut -d+ -f2 | cut -d. -f1) #[fg=colour7]| #[fg=brightblue]ï #[fg=brightyellow]#(acpi -b | cut -d" " -f4 | cut -d"%" -f1) #[fg=colour7]| #[fg=brightred]#(cut -d " " -f 1-3 /proc/loadavg) #[fg=colour7]| #[fg=brightgreen]%a %H:%M'
#to include google calendar
#set-option -g status-right "#(gcalcli agenda | head -2 | tail -1)"

set -g status-right-length 80
set -g status-right "#[fg=white]#(ip route get 8.8.8.8 | grep src |awk \'{print  $7}\') #[fg=green](#(cat ~/.ext-ip)) #[fg=green]| #(TZ=UTC date -u +%%H:%%M) UTC |#[fg=white] #(TZ=Europe/Zurich date +%%H:%%M) ZRH | #[fg=white] %a %d %b "

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
